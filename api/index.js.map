{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\Users\\SOUMITRI\\Documents\\Builds\\blog-app\\app\\root.tsx", "C:\\Users\\SOUMITRI\\Documents\\Builds\\blog-app\\app\\routes\\index.tsx", "C:\\Users\\SOUMITRI\\Documents\\Builds\\blog-app\\app\\routes\\blog.tsx", "mdx:C:\\Users\\SOUMITRI\\Documents\\Builds\\blog-app\\app\\routes\\blog\\go-gol.mdx", "mdx:C:\\Users\\SOUMITRI\\Documents\\Builds\\blog-app\\app\\routes\\blog\\nexdle.mdx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport styles from \"./styles/app.css\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "export default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1>nexxel's blog</h1>\n    </div>\n  );\n}\n", "import type { LinksFunction } from \"@remix-run/node\";\r\nimport { Outlet } from \"@remix-run/react\";\r\nimport styles from \"highlight.js/styles/github-dark-dimmed.css\";\r\n\r\nexport const links: LinksFunction = () => {\r\n  return [\r\n    {\r\n      rel: \"stylesheet\",\r\n      href: styles,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default function Blog() {\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"prose lg:prose-xl py-10\">\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"title\": \"Implementing Conway's Game of Life in Go\u26A1\",\n  \"date\": new Date(1647475200000),\n  \"meta\": {\n    \"title\": \"Game of Life in Go\"\n  }\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    img: \"img\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    a: \"a\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.h1>{attributes.title}</_components.h1>{\"\\n\"}{attributes.date.toDateString()}{\"\\n\"}<_components.p><_components.img src=\"https://github.com/nexxeln/go-gol/raw/main/images/demo.gif?raw=true\" alt=\"demo\" /></_components.p>{\"\\n\"}<_components.p>{\"I recently started learning Go and I absolutely love it. I think implementing Conway's Game of Life in a language is like a more sophisticated 'Hello World' program. Its pretty easy to do it and you learn a lot of stuff about that language. So that's what I did.\"}</_components.p>{\"\\n\"}<_components.h2>{\"Walk-through\"}</_components.h2>{\"\\n\"}<_components.p>{\"So first let's initialize a Go project:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-bash\">{\"go mod init github.com/nexxeln/go-gol\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Now make a \"}<_components.code>{\"gol.go\"}</_components.code>{\" file. This is where all our code will go.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-go\"><_components.span className=\"hljs-keyword\">{\"package\"}</_components.span>{\" main\\r\\n\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"import\"}</_components.span>{\" (\\r\\n\\t\"}<_components.span className=\"hljs-string\">{\"\\\"image/color\\\"\"}</_components.span>{\"\\r\\n\\t\"}<_components.span className=\"hljs-string\">{\"\\\"log\\\"\"}</_components.span>{\"\\r\\n\\t\"}<_components.span className=\"hljs-string\">{\"\\\"math/rand\\\"\"}</_components.span>{\"\\r\\n\\r\\n\\t\"}<_components.span className=\"hljs-string\">{\"\\\"github.com/hajimehoshi/ebiten\\\"\"}</_components.span>{\"\\r\\n)\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"So we start by declaring this as the main package and importing the tools we need. The last one called \"}<_components.code>{\"ebiten\"}</_components.code>{\" is a very simple 2-D engine written in Go, and we import it straight from GitHub which is pretty cool.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-go\"><_components.span className=\"hljs-keyword\">{\"const\"}</_components.span>{\" scale \"}<_components.span className=\"hljs-type\">{\"int\"}</_components.span>{\" = \"}<_components.span className=\"hljs-number\">{\"2\"}</_components.span>{\"\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"const\"}</_components.span>{\" width = \"}<_components.span className=\"hljs-number\">{\"300\"}</_components.span>{\"\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"const\"}</_components.span>{\" height = \"}<_components.span className=\"hljs-number\">{\"300\"}</_components.span>{\"\\r\\n\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"var\"}</_components.span>{\" blue color.Color = color.RGBA{\"}<_components.span className=\"hljs-number\">{\"69\"}</_components.span>{\", \"}<_components.span className=\"hljs-number\">{\"145\"}</_components.span>{\", \"}<_components.span className=\"hljs-number\">{\"196\"}</_components.span>{\", \"}<_components.span className=\"hljs-number\">{\"255\"}</_components.span>{\"}\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"var\"}</_components.span>{\" yellow color.Color = color.RGBA{\"}<_components.span className=\"hljs-number\">{\"255\"}</_components.span>{\", \"}<_components.span className=\"hljs-number\">{\"230\"}</_components.span>{\", \"}<_components.span className=\"hljs-number\">{\"120\"}</_components.span>{\", \"}<_components.span className=\"hljs-number\">{\"255\"}</_components.span>{\"}\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"var\"}</_components.span>{\" grid [width][height]\"}<_components.span className=\"hljs-type\">{\"uint8\"}</_components.span>{\" = [width][height]\"}<_components.span className=\"hljs-type\">{\"uint8\"}</_components.span>{\"{}\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"var\"}</_components.span>{\" buffer [width][height]\"}<_components.span className=\"hljs-type\">{\"uint8\"}</_components.span>{\" = [width][height]\"}<_components.span className=\"hljs-type\">{\"uint8\"}</_components.span>{\"{}\\r\\n\"}<_components.span className=\"hljs-keyword\">{\"var\"}</_components.span>{\" count \"}<_components.span className=\"hljs-type\">{\"int\"}</_components.span>{\" = \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Here we have declared some global variables. The \"}<_components.code>{\"scale\"}</_components.code>{\" is the density of the pixels. \"}<_components.code>{\"width\"}</_components.code>{\" and \"}<_components.code>{\"height\"}</_components.code>{\" are the width and height of the window. Next we declare some colors namely blue and yellow. The \"}<_components.code>{\"grid\"}</_components.code>{\" is where everything is going to be displayed and the \"}<_components.code>{\"buffer\"}</_components.code>{\" is the next iteration of the \"}<_components.code>{\"grid\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-go\"><_components.span className=\"hljs-function\"><_components.span className=\"hljs-keyword\">{\"func\"}</_components.span>{\" \"}<_components.span className=\"hljs-title\">{\"update\"}</_components.span><_components.span className=\"hljs-params\">{\"()\"}</_components.span></_components.span>{\" \"}<_components.span className=\"hljs-type\">{\"error\"}</_components.span>{\" {\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" x := \"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"; x < width\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"; x++ {\\r\\n\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" y := \"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"; y < height\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"; y++ {\\r\\n\\t\\t\\tbuffer[x][y] = \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"\\r\\n\\t\\t\\tn := grid[x\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"][y\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"] + grid[x\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"][y+\"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"] + grid[x\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"][y+\"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"] + grid[x+\"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"][y\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"] + grid[x+\"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"][y+\"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"] + grid[x+\"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"][y\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"] + grid[x+\"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"][y+\"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"] + grid[x+\"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"][y+\"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"]\\r\\n\\r\\n\\t\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"if\"}</_components.span>{\" grid[x][y] == \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\" && n == \"}<_components.span className=\"hljs-number\">{\"3\"}</_components.span>{\" {\\r\\n\\t\\t\\t\\tbuffer[x][y] = \"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"\\r\\n\\t\\t\\t} \"}<_components.span className=\"hljs-keyword\">{\"else\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"if\"}</_components.span>{\" n < \"}<_components.span className=\"hljs-number\">{\"2\"}</_components.span>{\" || n > \"}<_components.span className=\"hljs-number\">{\"3\"}</_components.span>{\" {\\r\\n\\t\\t\\t\\tbuffer[x][y] = \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"\\r\\n\\t\\t\\t} \"}<_components.span className=\"hljs-keyword\">{\"else\"}</_components.span>{\" {\\r\\n\\t\\t\\t\\tbuffer[x][y] = grid[x][y]\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\ttemp := buffer\\r\\n\\tbuffer = grid\\r\\n\\tgrid = temp\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" \"}<_components.span className=\"hljs-literal\">{\"nil\"}</_components.span>{\"\\r\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"This is the update function. Here we first get all the neighbors of the cell and store it in \"}<_components.code>{\"n\"}</_components.code>{\". Next we check if the cells around it are dead, if yes we make it alive. If there's overpopulation or under population we make it dead, otherwise we just copy it to the next iteration. After that we just return \"}<_components.code>{\"nil\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-go\"><_components.span className=\"hljs-function\"><_components.span className=\"hljs-keyword\">{\"func\"}</_components.span>{\" \"}<_components.span className=\"hljs-title\">{\"display\"}</_components.span><_components.span className=\"hljs-params\">{\"(window *ebiten.Image)\"}</_components.span></_components.span>{\" {\\r\\n\\twindow.Fill(blue)\\r\\n\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" x := \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"; x < width; x++ {\\r\\n\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" y := \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"; y < height; y++ {\\r\\n\\t\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" i := \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"; i < scale; i++ {\\r\\n\\t\\t\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" j := \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"; j < scale; j++ {\\r\\n\\t\\t\\t\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"if\"}</_components.span>{\" grid[x][y] == \"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\" {\\r\\n\\t\\t\\t\\t\\t\\twindow.Set(x*scale+i, y*scale+j, yellow)\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"This is the display function which is going to render it on the screen. This is where \"}<_components.code>{\"ebiten\"}</_components.code>{\" comes in. We start by defining \"}<_components.code>{\"window\"}</_components.code>{\" as an \"}<_components.code>{\"ebiten.Image\"}</_components.code>{\" and fill it with a nice blue color. Next for every pixel we're going to set that pixel as yellow.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-go\"><_components.span className=\"hljs-function\"><_components.span className=\"hljs-keyword\">{\"func\"}</_components.span>{\" \"}<_components.span className=\"hljs-title\">{\"frame\"}</_components.span><_components.span className=\"hljs-params\">{\"(window *ebiten.Image)\"}</_components.span></_components.span>{\" \"}<_components.span className=\"hljs-type\">{\"error\"}</_components.span>{\" {\\r\\n\\tcount++\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"var\"}</_components.span>{\" err \"}<_components.span className=\"hljs-type\">{\"error\"}</_components.span>{\" = \"}<_components.span className=\"hljs-literal\">{\"nil\"}</_components.span>{\"\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"if\"}</_components.span>{\" count == \"}<_components.span className=\"hljs-number\">{\"20\"}</_components.span>{\" {\\r\\n\\t\\terr = update()\\r\\n\\t\\tcount = \"}<_components.span className=\"hljs-number\">{\"0\"}</_components.span>{\"\\r\\n\\t}\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"if\"}</_components.span>{\" !ebiten.IsDrawingSkipped() {\\r\\n\\t\\tdisplay(window)\\r\\n\\t}\\r\\n\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" err\\r\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"This is the frame function. First we increment the \"}<_components.code>{\"count\"}</_components.code>{\" variable, and once it reaches 20 we're going to call the \"}<_components.code>{\"update\"}</_components.code>{\" function and reset the \"}<_components.code>{\"count\"}</_components.code>{\" variable. We also check if ebiten is not going to skip the rendering phase, then we're just going to call the \"}<_components.code>{\"display\"}</_components.code>{\" function and render it to the screen.\"}</_components.p>{\"\\n\"}<_components.p>{\"We're almost finished, let's set up our main function.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-go\"><_components.span className=\"hljs-function\"><_components.span className=\"hljs-keyword\">{\"func\"}</_components.span>{\" \"}<_components.span className=\"hljs-title\">{\"main\"}</_components.span><_components.span className=\"hljs-params\">{\"()\"}</_components.span></_components.span>{\" {\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" x := \"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"; x < width\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"; x++ {\\r\\n\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" y := \"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"; y < height\"}<_components.span className=\"hljs-number\">{\"-1\"}</_components.span>{\"; y++ {\\r\\n\\t\\t\\t\"}<_components.span className=\"hljs-keyword\">{\"if\"}</_components.span>{\" rand.Float32() < \"}<_components.span className=\"hljs-number\">{\"0.5\"}</_components.span>{\" {\\r\\n\\t\\t\\t\\tgrid[x][y] = \"}<_components.span className=\"hljs-number\">{\"1\"}</_components.span>{\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t\"}<_components.span className=\"hljs-keyword\">{\"if\"}</_components.span>{\" err := ebiten.Run(frame, width, height, \"}<_components.span className=\"hljs-number\">{\"2\"}</_components.span>{\", \"}<_components.span className=\"hljs-string\">{\"\\\"Game of Life\\\"\"}</_components.span>{\"); err != \"}<_components.span className=\"hljs-literal\">{\"nil\"}</_components.span>{\" {\\r\\n\\t\\tlog.Fatal(err)\\r\\n\\t}\\r\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"So we start off by setting up the grid and randomly populating it with cells using \"}<_components.code>{\"rand.Float32()\"}</_components.code>{\". Next we use \"}<_components.code>{\"ebiten.Run\"}</_components.code>{\" to run the program with the name \\\"Game of Life\\\". If \"}<_components.code>{\"ebiten.Run\"}</_components.code>{\" returns an error we're just going to log it to the terminal. This is reminiscent of pattern matching in Rust.\"}</_components.p>{\"\\n\"}<_components.p>{\"Well that's pretty much it! Now just open up the terminal and run the program:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-bash\">{\"go run ./main.go\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"All the code can be found \"}<_components.a href=\"https://github.com/nexxeln/go-gol\">{\"here\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"This was my first blog ever, so please tell me if I did something wrong. If you read till here you're very cool. Okay bye!\"}</_components.p></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"go-gol.mdx\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          ", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"title\": \"I made a wordle clone! \uD83D\uDE80\",\n  \"date\": new Date(1647820800000),\n  \"meta\": {\n    \"title\": \"nexdle\"\n  }\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    img: \"img\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.h1>{attributes.title}</_components.h1>{\"\\n\"}<_components.p>{\"Yes that's right, another wordle clone. You can play it \"}<_components.a href=\"https://nexdle.vercel.app/\">{\"here\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.p><_components.a href=\"https://nexdle.vercel.app/\">{\"nexdle\"}</_components.a>{\" is a \"}<_components.a href=\"https://www.nytimes.com/games/wordle/index.html\">{\"wordle\"}</_components.a>{\" clone made with \"}<_components.a href=\"https://reactjs.org/\">{\"React\"}</_components.a>{\", \"}<_components.a href=\"https://www.typescriptlang.org/\">{\"TypeScript\"}</_components.a>{\", \"}<_components.a href=\"https://tailwindcss.com/\">{\"TailwindCSS\"}</_components.a>{\", \"}<_components.a href=\"https://vitejs.dev/\">{\"Vite\"}</_components.a>{\", \"}<_components.a href=\"https://github.com/pmndrs/zustand\">{\"Zustand\"}</_components.a>{\" and tested with \"}<_components.a href=\"https://vitest.dev/\">{\"Vitest\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"This project was a great learning experience for me. Things I learnt while making nexdle:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"CSS Grids\"}</_components.li>{\"\\n\"}<_components.li>{\"Using state management libraries (\"}<_components.a href=\"https://github.com/pmndrs/zustand\">{\"Zustand\"}</_components.a>{\" in this case)\"}</_components.li>{\"\\n\"}<_components.li>{\"Using testing tools like Jest (\"}<_components.a href=\"https://vitest.dev/\">{\"Vitest\"}</_components.a>{\" in this case)\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"Before this I had made a simple \"}<_components.a href=\"https://github.com/nexxeln/todo-app\">{\"todo-app\"}</_components.a>{\" to get comfortable with using TypeScript in React projects. Now after using it for 2 projects, I'm absolutely in love with it. TypeScript is just so good for catching errors before shipping the app to production, and the autocomplete you get is just crazy. It takes the developer experience to a whole another level.\"}</_components.p>{\"\\n\"}<_components.p>{\"I used TailwindCSS for all the styling because lets face it, CSS is really fricking hard. Tailwind just makes it really simple and quick to make a stunning ui. Just add pre-built CSS utility classes and you're good to go!\"}</_components.p>{\"\\n\"}<_components.p>{\"I didn't use \"}<_components.code>{\"create-react-app\"}</_components.code>{\" for this project. Instead I used Vite. Vite is a module bundler, just like webpack. Since I've come across Vite, I haven't gone back to \"}<_components.code>{\"create-react-app\"}</_components.code>{\". It's just faster, has less dependencies so the build size is less. If you haven't tried it yet, I highly recommend you do!\"}</_components.p>{\"\\n\"}<_components.p>{\"I finally learnt how to use state management libraries. In this project I used Zustand, which is like a bare bones version of \"}<_components.a href=\"https://redux.js.org/\">{\"Redux\"}</_components.a>{\". It's better than using the Context API as its less boilerplatey. I figured for a small project I don't really need to use a heavy library like Redux.\"}</_components.p>{\"\\n\"}<_components.p>{\"A few weeks ago I learnt how to use \"}<_components.a href=\"https://jestjs.io/\">{\"Jest\"}</_components.a>{\" and I was really excited to try it out here. But I found out that it wasn't compatible with Vite. So I found this really awesome library called Vitest. Honestly, testing was the most fun part of the whole project. It helps you catch bugs before production and is just really fun to do.\\r\\n\"}<_components.img src=\"https://us-east-1.tixte.net/uploads/nexxel.needs.rest/Code_7Bk8VB3xBb.png\" alt=\"testing\" /></_components.p>{\"\\n\"}<_components.p>{\"Vitest also has this crazy ui testing option, I haven't explored it a lot but it's just insane. Check this out:\\r\\n\"}<_components.img src=\"https://github.com/nexxeln/nexdle/blob/main/images/Code_Vyzc5YbawL.gif?raw=true\" alt=\"insane\" />{\"\\r\\nI also uploaded this gif to \"}<_components.a href=\"https://youtu.be/2GLYNV5cQ-Y\">{\"YouTube\"}</_components.a>{\" since it's kind of long. You can watch it there if you prefer that.\"}</_components.p>{\"\\n\"}<_components.p>{\"So that's it for this blog. All the code for nexdle can be found \"}<_components.a href=\"https://github.com/nexxeln/nexdle/\">{\"here\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"If you made it this far thanks for reading!\"}</_components.p></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"nexdle.mdx\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          ", "export default {'version':'418e89ec','entry':{'module':'/build/entry.client-TSZ56T7M.js','imports':['/build/_shared/chunk-CYULS77A.js','/build/_shared/chunk-EBOZAN7A.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-EQTCGUZ7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog':{'id':'routes/blog','parentId':'root','path':'blog','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog-QEKALXTD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog/go-gol':{'id':'routes/blog/go-gol','parentId':'routes/blog','path':'go-gol','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog/go-gol-3BJXUWYG.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog/nexdle':{'id':'routes/blog/nexdle','parentId':'routes/blog','path':'nexdle','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog/nexdle-ZVLC3TP3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-4ZE3CE7A.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-418E89EC.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\SOUMITRI\\\\Documents\\\\Builds\\\\blog-app\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\SOUMITRI\\\\Documents\\\\Builds\\\\blog-app\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\SOUMITRI\\\\Documents\\\\Builds\\\\blog-app\\\\app\\\\routes\\\\index.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\SOUMITRI\\\\Documents\\\\Builds\\\\blog-app\\\\app\\\\routes\\\\blog.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\SOUMITRI\\\\Documents\\\\Builds\\\\blog-app\\\\app\\\\routes\\\\blog\\\\go-gol.mdx\";\nimport * as route4 from \"C:\\\\Users\\\\SOUMITRI\\\\Documents\\\\Builds\\\\blog-app\\\\app\\\\routes\\\\blog\\\\nexdle.mdx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/blog\": {\n      id: \"routes/blog\",\n      parentId: \"root\",\n      path: \"blog\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/blog/go-gol\": {\n      id: \"routes/blog/go-gol\",\n      parentId: \"routes/blog\",\n      path: \"go-gol\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/blog/nexdle\": {\n      id: \"routes/blog/nexdle\",\n      parentId: \"routes/blog\",\n      path: \"nexdle\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
